name: Development Distribution

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
    types: [closed]

jobs:
  dev-distribution:
    runs-on: ubuntu-latest
    name: Development Distribution
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@master
        with:
          node-version: '16.x'
      - name: Install node modules
        run: npm install --legacy-peer-deps
      - name: lint
        run: npm run lint
      - name: test
        run: npm run test:ci
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android Release
        run: |
          cd android && ./gradlew assembleRelease --no-daemon
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: ${{ secrets.FIREBASE_GROUPS }}
          file: android/app/build/outputs/apk/release/app-release.apk

      # - name: Distribute app via Firebase App Distribution
      #   env:
      #     firebaseToken: ${{ secrets.FIREBASE_TOKEN }}
      #     firebaseGroups: ${{ secrets.FIREBASE_GROUPS }}
      #     firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
      #     notes: ${{ github.event.head_commit.message }}
      #   run: |
      #     npm install -g firebase-tools
      #     export PATH="$(npm config get prefix):$PATH"
      #     firebase \
      #       appdistribution:distribute android/app/build/outputs/apk/release/app-release.apk \
      #       --app $firebaseAppId \
      #       --release-notes "$notes" \
      #       --groups "$firebaseGroups" \
      #       --token "$firebaseToken"
